@model Banque.Models.Compte

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Compte</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Solde)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Solde)
        </dd>
        <dt class = "col-sm-2">
            Type de Compte
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Discriminator)
        </dd>
        @if (Model is CompteEpargne compteEpargne)
        {
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => compteEpargne.Taux)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => compteEpargne.Taux) %
            </dd>
            @*Ajouter ici la fonctionnalité pour calculer les interrets en appelant une nouvelle méthode du controlleur*@
        }
        @if (Model is ComptePayant comptePayant)
        {
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => comptePayant.CoutOperation)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => comptePayant.CoutOperation)
            </dd>
        }
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Client)
        </dt>
        <dd class = "col-sm-10">
            <a asp-controller="Clients" asp-action="Details" asp-route-id="@Model.Client.Id">@Html.DisplayFor(model => model.ClientId)</a>
        </dd>
    </dl>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Operations.FirstOrDefault().Montant)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Operations.FirstOrDefault().DateOperation)
                </th>
                <th>
                    Type d'Opération
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model.Operations) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Montant)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateOperation)
                </td>
                <td>
                    @(item.Montant >= 0 ? "Dépôt" : "Retrait")
                </td>
                <td>
                    <a asp-controller="Operations" asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-controller="Operations" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
    }
        </tbody>
</table>
    <a asp-controller="Operations" asp-action="Create">Create New Operation</a>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
